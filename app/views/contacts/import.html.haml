= render 'entities/title_bar'

- if !@csv_header.blank?

  %h3= t('import.select_mapping')
  %p= t('import.warning')

  = simple_form_for :import, url: import_contacts_path do |form|
    %h4= t('contact')
    %table
      %tbody
        - Contact.import_attributes[:contact].each do |attr|
          %tr
            %td{ width: '50%' }= t(attr)
            %td{ width: '50%' }= form.input "contact[#{attr}]", as: :select, collection: @csv_header, label: false, required: false
        - Contact.import_attributes[:address].each do |attr|
          %tr
            %td= t(attr)
            %td= form.input "contact_address[#{attr}]", as: :select, collection: @csv_header, label: false, required: false

    %h4= t('account')
    %table
      %tbody
        - Contact.import_attributes[:account].each do |attr|
          %tr
            %td{ width: '50%' }= t(attr)
            %td{ width: '50%' }= form.input "account[#{attr}]", as: :select, collection: @csv_header, label: false, required: false
        - Contact.import_attributes[:address].each do |attr|
          %tr
            %td= t(attr)
            %td= form.input "account_address[#{attr}]", as: :select, collection: @csv_header, label: false, required: false

    = form.button :submit, disable_with: t('import.processing')

- elsif !@failed_lines.blank?
  %h3= t('import.failed_lines')

  - unless session[:failed_path].blank?
    = link_to t('import.download_failed_lines', count: @failed_lines.size), [:download_failed_import, :contacts]

- else
  %h3= t('import.select_csv_file')

  = simple_form_for :import, url: import_contacts_path do |form|
    .section
      = form.input :csv_file, as: :file
    .section
      = form.button :submit, disable_with: t('processing')
